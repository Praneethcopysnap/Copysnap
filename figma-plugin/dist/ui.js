(()=>{"use strict";({785:function(){var e=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(s,a){function c(e){try{i(o.next(e))}catch(e){a(e)}}function d(e){try{i(o.throw(e))}catch(e){a(e)}}function i(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(c,d)}i((o=o.apply(e,t||[])).next())}))};let t=null,n=[];const o=document.getElementById("initialState"),s=document.getElementById("loadingState"),a=document.getElementById("selectionState"),c=document.getElementById("resultsState"),d=document.getElementById("aboutState"),i=document.getElementById("notification"),l=document.getElementById("selectionInfo"),r=document.getElementById("textNodes"),u=document.getElementById("results"),g=document.getElementById("generateBtn"),m=document.getElementById("generateCopyBtn"),p=document.getElementById("backBtn"),y=document.getElementById("regenerateBtn"),f=document.getElementById("aboutBtn"),E=document.getElementById("backFromAboutBtn"),h=document.getElementById("visitWebsiteBtn"),v=document.getElementById("connectBtn"),x=document.getElementById("closeBtn"),B=document.getElementById("copyType"),L=document.getElementById("copyTone"),b=document.getElementById("additionalContext");function I(e){o&&o.classList.add("hidden"),s&&s.classList.add("hidden"),a&&a.classList.add("hidden"),c&&c.classList.add("hidden"),d&&d.classList.add("hidden"),e&&e.classList.remove("hidden")}function $(e,t=!1){i&&(i.textContent=e,i.classList.remove("hidden","success","error"),i.classList.add(t?"error":"success"),setTimeout((()=>{i.classList.add("hidden")}),5e3))}function k(e,t=""){const n=[];if(e.text&&n.push({id:e.id,name:e.name,text:e.text,path:t?`${t} > ${e.name}`:e.name,fontName:e.fontName,fontSize:e.fontSize}),e.children&&e.children.length>0){const o=t?`${t} > ${e.name}`:e.name;for(const t of e.children){const e=k(t,o);n.push(...e)}}return n}function w(){return e(this,void 0,void 0,(function*(){if(!t)return void $("No frame selected",!0);I(s);const e=B.value,n=L.value;b.value;try{yield new Promise((e=>setTimeout(e,1500)));const t={success:!0,suggestions:[`${e.charAt(0).toUpperCase()+e.slice(1)} copy in a ${n} tone: "Example UX copy suggestion 1"`,`${e.charAt(0).toUpperCase()+e.slice(1)} copy in a ${n} tone: "Example UX copy suggestion 2"`,`${e.charAt(0).toUpperCase()+e.slice(1)} copy in a ${n} tone: "Example UX copy suggestion 3"`]};if(!t.success)throw new Error("Failed to generate copy");M(t.suggestions)}catch(e){I(a),$("Error generating copy: "+e,!0)}}))}function M(e,t){if(u){if(u.innerHTML="",t){const e=document.createElement("div");e.innerHTML=`<p><strong>Suggestions for "${t.name}"</strong></p>`,u.appendChild(e)}e.forEach(((e,t)=>{const n=document.createElement("div");n.className="text-node",n.innerHTML=`\n      <div class="text-node-content">${e}</div>\n      <div class="button-row">\n        <button class="apply-suggestion" data-suggestion="${e}" data-index="${t}">\n          Use this\n        </button>\n      </div>\n    `,u.appendChild(n)})),document.querySelectorAll(".apply-suggestion").forEach((e=>{e.addEventListener("click",(e=>{var n,o;n=e.currentTarget.dataset.suggestion,o=t?t.id:null,n&&(o?parent.postMessage({pluginMessage:{type:"apply-copy",nodeId:o,text:n}},"*"):$("Copy saved to clipboard!"))}))})),I(c)}}window.onmessage=e=>{console.log("Message received from UI:",e.data.pluginMessage);const c=e.data.pluginMessage;if(c)switch(c.type){case"selection-data":console.log("Received selection data:",c.data),t=c.data,n=k(t),console.log("Extracted text nodes:",n),l&&t&&(l.innerHTML=`\n    <p><strong>${t.name}</strong> (${t.type})</p>\n  `),function(){if(r)if(0!==n.length){r.innerHTML="";for(const e of n){const t=document.createElement("div");t.className="text-node",t.innerHTML=`\n      <div class="text-node-header">\n        <span class="text-node-name">${e.name}</span>\n        <span>${e.path}</span>\n      </div>\n      <div class="text-node-content">${e.text}</div>\n      <div class="button-row">\n        <button class="secondary generate-for-node" data-node-id="${e.id}">Generate for this</button>\n        <button class="secondary apply-copy-node" data-node-id="${e.id}">Apply Copy</button>\n      </div>\n    `,r.appendChild(t)}document.querySelectorAll(".generate-for-node").forEach((e=>{e.addEventListener("click",(e=>{!function(e){if(!e)return;const t=n.find((t=>t.id===e));t&&(I(s),setTimeout((()=>{M(["Example copy suggestion 1: "+t.text,"Example copy suggestion 2: A better version of "+t.text,"Example copy suggestion 3: An alternative to "+t.text],t)}),1500))}(e.currentTarget.dataset.nodeId)}))}))}else r.innerHTML="<p>No text found in the selected element.</p>"}(),I(a),0===n.length&&$("No text elements found in the selected frame. Please select a frame that contains text.",!0);break;case"error":console.log("Received error:",c.message),$(c.message,!0),I(o);break;case"success":$(c.message);break;case"show-about":I(d)}},g?(console.log("Generate button found, adding event listener"),g.addEventListener("click",(()=>{console.log("Generate button clicked"),parent.postMessage({pluginMessage:{type:"generate-copy"}},"*")}))):console.log("Generate button not found in DOM"),m&&m.addEventListener("click",w),p&&p.addEventListener("click",(()=>{I(a)})),y&&y.addEventListener("click",w),f&&f.addEventListener("click",(()=>{I(d)})),E&&E.addEventListener("click",(()=>{I(o)})),h&&h.addEventListener("click",(()=>{window.open("https://copysnap.io","_blank")})),v&&v.addEventListener("click",(()=>{window.open("https://copysnap.io/connect-figma","_blank")})),x&&x.addEventListener("click",(()=>{parent.postMessage({pluginMessage:{type:"close"}},"*")})),I(o)}})[785]()})();